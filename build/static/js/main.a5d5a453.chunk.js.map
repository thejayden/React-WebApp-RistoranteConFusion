{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","Component","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","comment","postComment","dishId","commentsEach","author","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","comments","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","event","this","alert","username","value","password","remember","checked","preventDefault","setState","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","minLength","isNumber","isNaN","Number","validEmail","test","Contact","firstname","lastname","telnum","email","agree","contactType","message","touched","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","leaders","tag","left","middle","object","body","heading","About","RenderContent","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","rating","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","App","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5d5a453.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {//javascript objects coming in as parameters\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button, Breadcrumb, BreadcrumbItem,\r\n    Label, Col, Row, Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Rating\" md={12}>Rating</Label>\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\" Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comments</Label>\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"></Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n\r\n    if (dish != null)\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    else\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction RenderComments({ comment, postComment, dishId }) {\r\n    if (comment != null) {\r\n        return (\r\n            <div>\r\n                <h4><strong>Comments</strong></h4>\r\n                <Stagger in>\r\n                    {comment.map(commentsEach => {\r\n                        return (\r\n                            <Fade in key={commentsEach.id}>\r\n                                <ul key={commentsEach.id} className='list-unstyled'>\r\n                                    <p>{commentsEach.comment}</p>\r\n                                    <p>-- {commentsEach.author}, {new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(commentsEach.date))}</p>\r\n                                </ul>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                </Stagger>\r\n                <commentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comment={props.comments} postComment={props.postComment}\r\n                            dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n    /*\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderDish dish={props.dish}/>\r\n            </div>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderComments comment = {props.dish.comments}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    */\r\n}\r\nexport default DishDetail;","import React, { Component } from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Form} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n    \r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \"+ this.password\r\n            + \"Remember: \"+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input)=>this.username=input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input)=>this.password=input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember=input}/>Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                {/*see mainComponent.js and the properties passed to Home*/}\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}    \r\n                        />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess}    \r\n                        />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess}\r\n                        />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len); \r\nconst isNumber = (val) => !(val) || !isNaN(Number(val));\r\nconst validEmail = (val) => !(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n            values.firstname,\r\n            values.lastname,\r\n            values.telnum,\r\n            values.email,\r\n            values.agree,\r\n            values.contactType,\r\n            values.message\r\n        );\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\".firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className = \"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderLeader({leaders}){\r\n    return(\r\n        <div key={leaders.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl+leaders.image} alt={leaders.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leaders.name}</Media>\r\n                    <p>{leaders.designation}</p>\r\n                    <p>{leaders.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    function RenderContent({ leaders, isLoading, errMess }) {\r\n        if (isLoading) {\r\n            return <Loading />\r\n        }\r\n        else if (errMess) {\r\n            return <h4>{errMess}</h4>\r\n        }\r\n        else\r\n            return (\r\n                <Stagger in>\r\n                    {props.leaders.map(leader =>\r\n                        <Fade in>\r\n                            <RenderLeader key={leader.id} leaders={leader} />\r\n                        </Fade>)}\r\n                </Stagger>\r\n            );\r\n    }    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <RenderContent\r\n                            leaders={props.leaders}\r\n                            isLoading={props.leaderLoading}\r\n                            errMess={props.leaderErrMess}\r\n                        />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\n//thunk allwos us to return function isntead of action (for fetchDishes)\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + \"leaders\")\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message) => (dispatch) => {\r\n\r\n        const newFeedback = {\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            telnum: telnum,\r\n            email: email,\r\n            agree: agree,\r\n            contactType: contactType,\r\n            message: message\r\n        };\r\n\r\n        return fetch(baseUrl + \"feedback\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newFeedback),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error => {\r\n                    throw error;\r\n                })\r\n            .then(response => response.json())\r\n            .then(response =>\r\n                alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n            )\r\n            .catch(error => {\r\n                console.log('post feedbacks', error.message);\r\n                alert('Your feedback could not be posted\\nError: ' + error.message);\r\n            });\r\n    };","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, postFeedback, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n});\r\n\r\nclass Main extends Component {\r\n    \r\n    //when main component is mounted, then fetch all these from server\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n\r\n            );\r\n        };\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} leaderLoading={this.props.leaders.isLoading} leaderErrMess={this.props.leaders.errMess}/>} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\n//shape of state is change to have 3 different parameters\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            //sprint operator from ES6\r\n            //take current value of state and whatever else that will be passed in after this will be applied as modifications to the state\r\n            //create a new object from the original state and then make some changes to that object and then return that object\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n},\r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload, comments:[] };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            //state shape has changed, so use ...state\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions:[]};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n},\r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders:[] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return ( //store becomes available to all components\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  }\n}\n  \n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}