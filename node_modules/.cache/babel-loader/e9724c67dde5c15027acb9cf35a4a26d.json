{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\LIFELONG LEARNING\\\\Coursera\\\\Fullstack web mobile dev\\\\React\\\\confusion\\\\src\\\\components\\\\DishDetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Media } from 'reactstrap';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\nimport Menu from './MenuComponent';\n\nclass DishDetail extends Component {\n  //required\n  constructor(props) {\n    super(props); //construct state\n\n    this.state = {};\n  }\n\n  renderDish(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: props.image,\n      alt: props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, props.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, props.description)))));\n  }\n\n  renderComments(props) {\n    if (comments == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      });\n    }\n\n    const cmnts = comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit'\n      }).format(new Date(comment.date))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \" Comments \"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, cmnts));\n    /*const cmntsArr = this.props.comments.map((props) => {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <li key={props.id}><h4>Comments</h4>\r\n                    <ul>\r\n                        <p>{props.comment}</p>\r\n                        <p>{props.author}</p>\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n        )\r\n    })*/\n  }\n\n  render() {\n    const dish = this.props.dish;\n\n    if (dish == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      });\n    }\n\n    const comments = this.props.comments;\n    const dishContent = this.renderDish(dish);\n    const commentsContent = this.renderComments(dish.comments);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, dishContent, commentsContent);\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["C:/Users/Acer/Documents/LIFELONG LEARNING/Coursera/Fullstack web mobile dev/React/confusion/src/components/DishDetailComponent.js"],"names":["React","Component","Media","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Menu","DishDetail","constructor","props","state","renderDish","image","name","description","renderComments","comments","cmnts","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","date","render","dish","dishContent","commentsContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle} from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\n\r\nclass DishDetail extends Component {\r\n    //required\r\n    constructor(props){\r\n        super(props);\r\n        //construct state\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    renderDish(props){\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card>\r\n                        <CardImg top src={props.image} alt={props.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{props.name}</CardTitle>\r\n                            <CardText>{props.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderComments(props){\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n        \r\n        /*const cmntsArr = this.props.comments.map((props) => {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <li key={props.id}><h4>Comments</h4>\r\n                        <ul>\r\n                            <p>{props.comment}</p>\r\n                            <p>{props.author}</p>\r\n                        </ul>\r\n                    </li>\r\n                </div>\r\n            )\r\n        })*/\r\n    }\r\n\r\n    render(){\r\n        const dish = this.props.dish\r\n        if (dish==null){\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n        const comments = this.props.comments\r\n\r\n        const dishContent = this.renderDish(dish)\r\n        const commentsContent = this.renderComments(dish.comments)\r\n\r\n        return(\r\n            <div>\r\n                {dishContent}\r\n                {commentsContent}\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}