{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\LIFELONG LEARNING\\\\Coursera\\\\Fullstack web mobile dev\\\\React\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Breadcrumb, BreadcrumbItem, Form, FormGroup, Label, Input, Col, Row, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      isModalOpen: false\n    };\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), \" Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"Rating\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \" Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Required ',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) return /*#__PURE__*/React.createElement(FadeTransform, {\n    in: true,\n    transformProps: {\n      exitTransform: 'scale(0.5) translateY(-50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    src: baseUrl + dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, dish.description))));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  });\n}\n\nfunction RenderComments({\n  comment,\n  postComment,\n  dishId\n}) {\n  const dishComments = comment.map(commentsEach => {\n    /*#__PURE__*/\n    React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 57\n      }\n    }, \"return (\", /*#__PURE__*/React.createElement(\"ul\", {\n      key: commentsEach.id,\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, commentsEach.comment), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"-- \", commentsEach.author, \", \", new Intl.DateTimeFormat('en', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(commentsEach.date))))), \")\");\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Comments\")), dishComments, /*#__PURE__*/React.createElement(CommentForm, {\n    dishId: dishId,\n    postComment: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst DishDetail = props => {\n  if (props.isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })));\n  } else if (props.errMess) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, props.errMess)));\n  } else if (props.dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comment: props.comments,\n      postComment: props.postComment,\n      dishId: props.dish.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }))));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  });\n  /*\r\n  <div className=\"container\">\r\n      <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n              <RenderDish dish={props.dish}/>\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n              <RenderComments comment = {props.dish.comments}/>\r\n          </div>\r\n      </div>\r\n  </div>\r\n  */\n\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["C:/Users/Acer/Documents/LIFELONG LEARNING/Coursera/Fullstack web mobile dev/React/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Button","Breadcrumb","BreadcrumbItem","Form","FormGroup","Label","Input","Col","Row","Modal","ModalHeader","ModalBody","Link","Control","LocalForm","Errors","Loading","baseUrl","FadeTransform","Fade","Stagger","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","toggleModal","bind","handleSubmit","state","isModalOpen","setState","values","console","log","JSON","stringify","postComment","dishId","rating","author","comment","render","RenderDish","dish","exitTransform","image","name","description","RenderComments","dishComments","map","commentsEach","id","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","isLoading","errMess","comments"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button, Breadcrumb, BreadcrumbItem, Form,\r\n    FormGroup, Label, Input, Col, Row, Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Rating\" md={12}>Rating</Label>\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\" Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comments</Label>\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"></Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n\r\n    if (dish != null)\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    else\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction RenderComments({ comment, postComment, dishId }) {\r\n\r\n    const dishComments = comment.map((commentsEach) => {<Stagger in>\r\n        return (\r\n            \r\n                <ul key={commentsEach.id} className='list-unstyled'>\r\n\r\n                    <Fade in>\r\n                        <p>{commentsEach.comment}</p>\r\n                        <p>-- {commentsEach.author}, {new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(commentsEach.date))}</p>\r\n                    </Fade>\r\n\r\n                </ul>\r\n            \r\n        )\r\n        </Stagger>\r\n    })\r\n    return (\r\n        <div>\r\n            <h4><strong>Comments</strong></h4>\r\n            {dishComments}\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comment={props.comments} postComment={props.postComment}\r\n                            dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n    /*\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderDish dish={props.dish}/>\r\n            </div>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderComments comment = {props.dish.comments}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    */\r\n}\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}