{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Acer\\\\Documents\\\\LIFELONG LEARNING\\\\Coursera\\\\Fullstack Pt 1\\\\React\\\\confusion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Comments=function Comments(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{errMess:null,comments:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_COMMENTS:return _objectSpread({},state,{errMess:null,comments:action.payload});case ActionTypes.COMMENTS_FAILED:return _objectSpread({},state,{errMess:action.payload,comments:[]});case ActionTypes.ADD_COMMENT:var comment=action.payload;//state shape has changed, so use ...state\nreturn _objectSpread({},state,{comments:state.comments.concat(comment)});default:return state;}};","map":{"version":3,"sources":["C:/Users/Acer/Documents/LIFELONG LEARNING/Coursera/Fullstack Pt 1/React/confusion/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"8KAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAIT,IAJUC,CAAAA,KAIV,2DAJkB,CAC7BC,OAAO,CAAE,IADoB,CAE7BC,QAAQ,CAAE,EAFmB,CAIlB,IAAXC,CAAAA,MAAW,2CACX,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,WAAW,CAACO,YAAjB,CACI,wBAAYL,KAAZ,EAAmBC,OAAO,CAAE,IAA5B,CAAkCC,QAAQ,CAAEC,MAAM,CAACG,OAAnD,GAEJ,IAAKR,CAAAA,WAAW,CAACS,eAAjB,CACI,wBAAYP,KAAZ,EAAmBC,OAAO,CAAEE,MAAM,CAACG,OAAnC,CAA4CJ,QAAQ,CAAC,EAArD,GAEJ,IAAKJ,CAAAA,WAAW,CAACU,WAAjB,CACI,GAAIC,CAAAA,OAAO,CAAGN,MAAM,CAACG,OAArB,CACA;AACA,wBAAYN,KAAZ,EAAmBE,QAAQ,CAAEF,KAAK,CAACE,QAAN,CAAeQ,MAAf,CAAsBD,OAAtB,CAA7B,GAEJ,QACI,MAAOT,CAAAA,KAAP,CAbR,CAeH,CApBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n},\r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload, comments:[] };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            //state shape has changed, so use ...state\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}