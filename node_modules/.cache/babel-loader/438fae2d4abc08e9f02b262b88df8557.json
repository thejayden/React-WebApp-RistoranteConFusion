{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\LIFELONG LEARNING\\\\Coursera\\\\Fullstack web mobile dev\\\\React\\\\confusion\\\\src\\\\components\\\\MenuComponent.js\";\nimport React, { Component } from 'react';\nimport { Media } from 'reactstrap';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\n\nclass Menu extends Component {\n  //required\n  constructor(props) {\n    super(props); //construct state\n\n    this.state = {\n      selectedDish: null\n    };\n  } //function to set state according to dish selected\n\n\n  onDishSelect(dish) {\n    this.setState({\n      selectedDish: dish\n    });\n  } //function to return item displayed using reactstrap card layout according to \"dish\" props\n\n\n  renderDish(dish) {\n    //check if state is set, i.e. if any dish is selected\n    if (dish != null) //this will be passed into render() to display image of dish selected\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardImg, {\n        top: true,\n        src: dish.image,\n        alt: dish.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, dish.description)));else //return empty div if selectedDish == null\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      });\n  } //render screen\n\n\n  render() {\n    //The map() method calls the provided function once for each element in an array, in order.\n    const menu = this.props.dishes.map(dish => {\n      return (\n        /*#__PURE__*/\n        //card takes up entire screen for extra small to small\n        //card takes up 5 columns for mdeium screen sizes and above\n        //1px margin all around\n        React.createElement(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          key: dish.id //Card onClick event returns the function onDishSelect, setting state according to clicked item\n          ,\n          onClick: () => this.onDishSelect(dish),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardImg, {\n          width: \"100%\",\n          src: dish.image,\n          alt: dish.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(CardImgOverlay, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }\n        }, dish.name))))\n      );\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, menu), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, this.renderDish(this.state.selectedDish))));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["C:/Users/Acer/Documents/LIFELONG LEARNING/Coursera/Fullstack web mobile dev/React/confusion/src/components/MenuComponent.js"],"names":["React","Component","Media","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Menu","constructor","props","state","selectedDish","onDishSelect","dish","setState","renderDish","image","name","description","render","menu","dishes","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle} from 'reactstrap';\r\n\r\nclass Menu extends Component {\r\n    //required\r\n    constructor(props){\r\n        super(props);\r\n        //construct state\r\n        this.state = {\r\n            selectedDish : null\r\n        }\r\n    }\r\n    //function to set state according to dish selected\r\n    onDishSelect(dish){\r\n        this.setState({ selectedDish : dish });\r\n    }\r\n    //function to return item displayed using reactstrap card layout according to \"dish\" props\r\n    renderDish(dish){\r\n        //check if state is set, i.e. if any dish is selected\r\n        if (dish != null)\r\n            //this will be passed into render() to display image of dish selected\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            //return empty div if selectedDish == null\r\n            return (\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    //render screen\r\n    render(){\r\n        //The map() method calls the provided function once for each element in an array, in order.\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return(\r\n                //card takes up entire screen for extra small to small\r\n                //card takes up 5 columns for mdeium screen sizes and above\r\n                //1px margin all around\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card key={dish.id}\r\n                        //Card onClick event returns the function onDishSelect, setting state according to clicked item\r\n                        onClick={() => this.onDishSelect(dish)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                </div>\r\n            );\r\n            \r\n        });\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className = \"row\">\r\n                    {menu} \r\n                </div>\r\n                <div className = \"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        {this.renderDish(this.state.selectedDish)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}